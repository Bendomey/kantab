version: '3.0'
services:
  nats:
    image: nats:2
    ports:
      - '4222:4222'
    restart: unless-stopped
    command:
      - '-m'
      - '8222'
  nats_exporter:
    image: natsio/prometheus-nats-exporter:latest
    command:
      - '-varz'
      - http://nats:8222
  redis:
    image: redis:6-alpine
    restart: unless-stopped
  redis_exporter:
    image: oliver006/redis_exporter:alpine
    environment:
      REDIS_ADDR: redis://redis:6379
  mongo:
    image: mongo:4
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
  mongo_exporter:
    image: bitnami/mongodb-exporter:latest
    environment:
      MONGODB_URI: mongodb://mongo:27017
    command:
      - '--compatible-mode'
  traefik:
    image: traefik:2.4
    command:
      - '--api.insecure=true'
      - '--entryPoints.http.address=:80'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--metrics.prometheus=true'
      - '--entryPoints.metrics.address=:8082'
      - '--metrics.prometheus.entryPoint=metrics'
    ports:
      - '3000:80'
      - '3001:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:v2.25.0
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    links:
      - alertmanager:alertmanager
    restart: unless-stopped
  alertmanager:
    image: prom/alertmanager:v0.15.3
    ports:
      - '9093:9093'
    volumes:
      - ./monitoring/alertmanager/:/etc/alertmanager/
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
  grafana:
    image: grafana/grafana:6.5.0
    depends_on:
      - prometheus
    ports:
      - '9000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
      - ./monitoring/grafana/plugins/:/var/lib/grafana/plugins/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
  v1_accounts:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: accounts.service.js
  v1_activities:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: activities.service.js
  api:
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.rule=PathPrefix(`/`)
      - traefik.http.services.api.loadbalancer.server.port=4000
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: api.service.js
  v1_boards:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: boards.service.js
  v1_card_attachments:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: card.attachments.service.js
  v1_card_checklists:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: card.checklists.service.js
  v1_cards:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: cards.service.js
  v1_config:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: config.service.js
  laboratory:
    expose:
      - 3212
    ports:
      - '3212:3212'
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: laboratory.service.js
  v1_lists:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: lists.service.js
  v1_mail:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: mail.service.js
  v1_tokens:
    image: kantab
    env_file:
      - docker-compose.env
      - .env
    volumes:
      - app_data:/app/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    depends_on:
      - mongo
      - nats
      - redis
    restart: unless-stopped
    environment:
      SERVICES: tokens.service.js
volumes:
  app_data:
    driver: local
  mongo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
