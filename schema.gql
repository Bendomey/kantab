scalar Date

type Query {
  users(limit: Int, offset: Int, sort: String): [User]
  user(id: String): User
  me: User
  boards(limit: Int, offset: Int, sort: String): [Board]
  boardsCount: Int
  board(id: String!): Board
}

type Mutation {
  login(email: String!, password: String, token: String): LoginToken
  createBoard(title: String!, description: String): Board
}

type User {
  id: String!
  username: String!
  firstName: String!
  lastName: String!
  email: String
  avatar: String
  status: Int
  boards(limit: Int, offset: Int, sort: String): [Board]
  boardCount: Int
}

type LoginToken {
  token: String!
}

type Board {
  id: String!
  title: String!
  slug: String
  description: String
  owner: User
  createdAt: Float
}
